@use "../abstracts";
$error-color: #ed4337;

.form {
    // cái invalid này bị lỗi khi class form
    // lồng quá nhiều cấp mới đến class submit-btn
    // này là lỗi trình duyệt
    // để không xảy ra lỗi này
    // thì phân cấp từ form vào submit-btn không được quá 4 cấp
    // mà của mình đang là 5 cấp nên sẽ bị như thế
    // khi mà điền các trường input vào rồi nhưng nút btn vẫn không sáng lên
    // để thử lỗi này thì vào nút có nội dung create thêm class form__submit-btn
    &:has(:invalid) &__submit-btn {
        opacity: 0.5;
        pointer-events: none;
    }

    &__row {
        display: flex;
        gap: 30px;

        @include abstracts.screen(md) {
            gap: 20px;
        }
        @include abstracts.screen(sm) {
            flex-direction: column;
            gap: 0;
        }

        // Các thẻ con trực tiếp của row
        // sẽ có flex bằng 1
        > * {
            flex: 1;
        }
    }

    &__group {
        margin-top: 30px;

        @include abstracts.screen(md) {
            margin-top: 20px;
        }

        &--inline {
            display: flex;
            align-items: center;
        }

        .form__error,
        .form__input-icon-error {
            display: none;
            margin-left: 12px;
            animation: shake 0.5s;
        }

        .form__input-icon {
            display: none;
            margin-left: 12px;
        }
    }

    &__text-area,
    &__text-input {
        display: flex;
        align-items: center;
        padding: 0 12px;
        border-radius: 10px;
        border: 1px solid #d2d1d6;

        &:focus-within {
            border-color: #77dae6;
        }
    }

    &__text-area {
        height: 100px;
        padding: 12px;
        &-input {
            resize: none;
        }
    }

    &__text-input {
        position: relative;
        max-width: 460px;
        height: 48px;

        gap: 10px;

        &--small {
            height: 42px;
        }
        @include abstracts.screen(md) {
            height: 48px;
        }
    }

    &__input,
    &__text-area-input {
        flex: 1;
        width: 100%;
        height: 100%;
        font-size: 1.8rem;
        font-weight: 500;
        line-height: 144.444%;
        &::placeholder {
            color: var(--form-placeholder-color);
        }

        @include abstracts.screen(md) {
            font-size: 1.6rem;
        }
    }

    &__input {
        &-icon {
            margin-left: 12px;
            width: 24px;
        }
    }

    &__select-dialog {
        z-index: 1;
        display: flex;
        flex-direction: column;
        position: absolute;
        background: var(--form-select-dialog-bg);
        padding-bottom: 10px;
        border: 1px solid #d2d1d6;
        border-radius: 10px;
        box-shadow: 0 0 5px var(--form-dialog-shadow);
        bottom: 44px;
        left: 10px;
        max-height: 310px;
        min-width: 230px;

        visibility: hidden;
        opacity: 0;
        translate: 0 8px;
        transition: visibility opacity translate;
        transition-duration: 0.3s;

        &.show {
            opacity: 1;
            visibility: visible;
            translate: 0;
        }

        @include abstracts.screen(sm) {
            position: fixed;
            inset: 0;
            max-width: initial;
            max-height: initial;
            border-radius: 0;
        }
    }

    &__dialog-heading {
        padding: 20px;
        font-size: 1.8rem;
        font-weight: 600;
        text-align: center;
    }

    &__close-dialog {
        position: absolute;
        padding: 12px 18px;
        top: 0;
        right: 0;
        opacity: 0.8;
        font-size: 3rem;
    }

    &__search {
        display: flex;
        align-items: center;
        border-bottom: 1px solid #d2d1d6;
        height: 38px;
        flex-shrink: 0;
        padding: 0 20px;
        &-input {
            flex: 1;
            height: 100%;
            font-size: 1.6rem;
        }
        &-icon {
            width: 16px;
            margin-left: 10px;
        }

        @include abstracts.screen(lg) {
            height: 48px;

            &-icon {
                width: 20px;
            }
        }
        @include abstracts.screen(sm) {
            padding: 0 14px;
            border: 1px solid #d2d1d6;
            margin: 10px 30px 0;
            border-radius: 10px;
        }
    }

    &__options-list {
        flex: 1;
        margin-top: 10px;
        overflow-y: auto;
        // để cuộn hết rồi không bị cuộn bên ngoài trang
        scroll-behavior: contain;

        // Để khi dùng iphone khi bàn phím hiển thị lên
        // sẽ không bị mất nội dung
        @supports (-webkit-touch-callout: none) {
            padding-bottom: 300px;
        }
    }

    &__option {
        padding: 8px 20px;
        font-size: 1.4rem;
        &--current {
            font-weight: 500;
            background-color: rgba($color: #ffb700, $alpha: 0.6);
        }
        &:not(&--current):hover {
            background-color: var(--form-option-hover-bg);
            cursor: pointer;
        }

        @include abstracts.screen(lg) {
            padding: 18px 30px;
            font-size: 1.6rem;
        }
    }

    &__error {
        display: none;
        text-align: left;
        color: $error-color;
        font-weight: 500;
        font-size: 1.4rem;
        margin-top: 8px;
    }
    &__input-icon-error {
        display: none;
    }

    &__pull-right {
        margin-left: auto;
    }
    &__checkbox {
        user-select: none;
        position: relative;

        display: flex;
        align-items: center;
        &-label {
            margin-left: 29px;
            font-size: 1.5rem;
            font-weight: 500;
            line-height: 146.667%;
            color: #9e9da8;

            @include abstracts.screen(md) {
                font-size: 1.4rem;
            }
        }

        &::before,
        &::after {
            content: "";
            position: absolute;
        }

        &::before {
            width: 19px;
            height: 19px;
            border-radius: 5px;
            border: 1px solid #9e9da8;
        }
    }

    &__checkbox:has(:checked) {
        &::before {
            background-color: #ffb700;
            border-color: #ffb700;
        }

        &::after {
            width: 16px;
            height: 8px;
            border: 3px solid;
            border-color: transparent transparent #fff #fff;
            rotate: -45deg;
            left: 2px;
            top: 5px;
        }
    }

    &__label {
        // Thẻ label với input đều là inline
        // Nên để đảm bảo 2 cái này phải khác dòng
        // Thì đặt label là block
        display: block;
        font-size: 2.2rem;
        font-weight: 500;
        line-height: 145.455%;

        &--medium {
            margin-bottom: 20px;
            font-size: 2.2rem;
            font-weight: 500;
            line-height: 145.455%;
        }

        &--small {
            font-size: 1.4rem;
            font-weight: 500;
            line-height: 142.857%;
            margin-bottom: 10px;
        }
    }

    &__select-wrap {
        // border-radius: 6px;
        // border: 1px solid #d2d1d6;
        // display: flex;
        // justify-content: center;
        // align-items: center;
        // position: relative;
        // min-width: 50px;
        // width: 340px;
        // height: 44px;
        display: flex;
        align-items: center;
        height: 45px;
        border-radius: 6px;
        border: 1px solid #d2d1d6;
    }

    &__select {
        // border: none;
        // appearance: none;
        // display: flex;
        // align-items: center;
        // justify-content: space-between;
        // padding: 0 14px;
        // min-width: var(--width, 108px);
        // font-size: 1.4rem;
        // font-weight: 500;
        // line-height: 142.857%;
        // height: calc(100% - 10px);
        // cursor: pointer;
        // width: 100%;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 14px;
        min-width: var(--width, 108px);
        font-size: 1.4rem;
        font-weight: 500;
        line-height: 142.857%;
        height: calc(100% - 10px);
        cursor: pointer;
        &--large {
            width: 320px;
        }

        @include abstracts.screen(xl) {
            flex: 1;
        }
    }

    &__select + &__select {
        border-left: 1px solid #d2d1d6;
    }

    &__tags {
        display: flex;
        align-items: center;
        gap: 10px 20px;
        flex-wrap: wrap;
        @include abstracts.screen(sm) {
            gap: 10px;
        }
    }
    &__tag {
        padding: 6px 12px;
        font-size: 1.4rem;
        font-weight: 500;
        line-height: 142.857%;
        background-color: var(--form-tag-bg);
        border-radius: 6px;
        color: #9e9da8;
        transition: color 0.25s;

        &--equal {
            flex-grow: 1;
        }

        &:hover {
            color: var(--text-color);
        }
    }
}
.radio {
    display: flex;
    justify-content: start;
    align-items: center;
    gap: 6px;
    width: 100%;
    height: 100%;

    &::before,
    &::after {
        content: "";
        display: inline-block;
    }

    &::before {
        width: 12px;
        height: 12px;
        border: 2px solid #ccc;
        border-radius: 50%;
    }

    &:has(:checked)::before {
        background-color: #ffb700;
        border: 2px solid #ffb700;
    }
    &:has(:checked) {
        color: var(--text-color);
    }
}
.radio [type="radio"] {
    display: none;
}

.spinner {
    border: 4px solid rgba(0, 0, 0, 0.1);
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border-left-color: #09f;
    animation: spin 1s ease infinite;

    &-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}
